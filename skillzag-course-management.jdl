enum CourseStatus{
ACTIVE,
INACTIVE
}

enum RecommendedStatus{
ACTIVE,
RECOMMENDED
}

entity CoursesManagement {
    courseId Integer,
	courseName String,
	validFrom Instant,
	validTo Instant,
    imagePath String,
	videoUrl String,
	courseDescription String,
	courseObjective String,
	url1 String,
	url2 String,
	url3 String,
	quizb4Course String,
	quiza4Course String,
    courseStatus CourseStatus,
    recommendedStatus RecommendedStatus,
    subscriptionId Long,
    createdBy String,
    creationDate Instant
}

enum SessionStatus{
ACTIVE,
INPROGRESS,
COMPLETED
}

enum SubscriptionRequired{
YES,
NO
}

entity SessionManagement {
   sessionNumber Integer,
   sessionName String,
   sessionDescription String,
   sessionUrl String,
   sessionVideoUrl String,
   quiz String,
   sessionLogo String,
   sessionStatus SessionStatus,
   createdBy String,
   creationDate Instant
   subscriptionRequired SubscriptionRequired
}

enum BlockSubscription{
YES,
NO
}


entity SubscriptionManagement {
   userId String,
   subscriptionType String,
   subscriptionName String,
   subscriptionDescription String,
   subscriptionStatus String,
   subscriptionStartdate Instant,
   subscriptionEnddate Instant,
   paymentStatus String,
   subscriptionDate Instant,
   amount Double,
   discountPercentage Double,
   type String,
   blockSubscription BlockSubscription
}

entity Cart {
   courseId Long,
   userId String,
   subscriptionId Long,
   promoId Long,
   discountPercentage Double,
   checkoutDate Instant,
   checkOutStatus String,
   creationDate Instant
}

entity Promo {
    cartId Long,
    promoCode String,
    validFrom Instant,
    validTo Instant,
    createdBy String,
    creationDate Instant
}

entity Payment {
   courseId Long,
   userId String,
   subscriptionId Long,
   cartUsedDate Instant,
   paymentStatus String,
   amount Double,
   paymentDate Instant
}

entity UserActivity {
   courseId Long,
   enrollmentStatus String,
   userId String,
   subscriptionId Long,
   activityDate Instant
}

relationship OneToMany {
CoursesManagement to SessionManagement
}

// Set pagination options
paginate all with pagination
// Use Data Transfert Objects (DTO)
dto * with mapstruct

service all with serviceImpl
